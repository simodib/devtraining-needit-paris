<?xml version="1.0" encoding="UTF-8"?><record_update table="sysauto_script">
    <sysauto_script action="INSERT_OR_UPDATE">
        <active>true</active>
        <business_calendar/>
        <condition/>
        <conditional>false</conditional>
        <entered_time>1970-01-01 00:00:00</entered_time>
        <name>Set Group Org Ownership v0.3</name>
        <offset/>
        <offset_type/>
        <run_as display_value="System Administrator">6816f79cc0a8016401c5a33be04be441</run_as>
        <run_as_tz/>
        <run_dayofmonth>1</run_dayofmonth>
        <run_dayofweek>1</run_dayofweek>
        <run_period/>
        <run_start>2021-05-31 09:57:46</run_start>
        <run_time>1970-01-01 00:00:00</run_time>
        <run_type>on_demand</run_type>
        <script><![CDATA[var grp = new GlideRecord('sys_user_group');
var au = new ArrayUtil();
var numGroups = 0;
var groupObjList = [];
var groupObj = {"Name": "", "Org": ""};
grp.addQuery('active', true);
grp.query();


//	identify if no groups do something else do while loop

while (grp.next()) {
	numGroups += 1 ;
	var grpDepts = [];
	var grpDeptsCount = [];
    groupName = grp.getDisplayValue();
	gs.print('---------------------GROUP: [' + groupName +']------------------------------------');
//	gs.info('GROUP = ' + groupName);
	grpMem = new GlideRecord('sys_user_grmember');
	grpMem.addQuery('group', grp.sys_id);
	grpMem.addQuery('user.active', true);
	grpMem.query();
	
//	identify if group has 0 members and do something else do while loop
	
	var noMem = true;
	while (grpMem.next()) {
		noMem = false;
//		gs.info('inside while mem');
		groupMemberName = grpMem.user.getDisplayValue();
		groupMemberDept = grpMem.user.department.getDisplayValue();
		if (groupMemberDept == '') {groupMemberDept = 'NoDept';}
// 		gs.print('--------MEM--------------');
// 		gs.info('MEMBER = ' + groupMemberName);
// 		gs.info('DEPT = ' + groupMemberDept);

		if (au.contains(grpDepts, groupMemberDept)) {
			var dIndex = au.indexOf(grpDepts, groupMemberDept);
			grpDeptsCount[dIndex] += 1;
// 			gs.print('dIndex (if) = ' + dIndex);
		} else {
			grpDepts.push(groupMemberDept);
			grpDeptsCount.push(1);
// 			gs.print('dIndex (else)= ' + dIndex);
		}
		
		}

// 	gs.print('----------DEPTS------------');
	if (noMem) {gs.info('No Members found');}
	
	for (var j = 0; j < grpDepts.length; j++) {
		gs.print(grpDepts[j] + '\t -------> ' + grpDeptsCount[j]);
	}

	// identify dept with highest members and assign it to group as owning org and add to an Obj array
	
//	var isGrpEmpty = ((noMem) ? noMem : false);
// 	gs.info('grpDepts = ' + ((!noMem) ? 'NOT EMPTY' : '----empty----'));
	
	if (!noMem) {
		var foundInd = 0;
		for (var k = 1; k < grpDepts.length; k++) {
// 			gs.info('grpDepts.length=' + grpDepts.length);
			if (grpDeptsCount[k] >= grpDeptsCount[foundInd]) {
//				gs.info('INSIDE IF: =k=' + k + '||=foundInd=' + foundInd + '**' + grpDeptsCount[k]);
				foundInd = k;
			}
		}

	}
// 	gs.info('AFTER IF: =k=' + k + '||=foundInd=' + foundInd);
// 	gs.print('THISISIT!!: ' + groupName + ' ------->  |' + grpDepts[foundInd] + '| ======> ' + grpDeptsCount[foundInd]);
	
	groupObj = {"Name": groupName, "Org": grpDepts[foundInd]};
	groupObjList.push(groupObj);
	gs.info('OWNING ORG IS \t========> [' + groupObj.Org +']');
	

}
gs.info('TOTAL ACTIVE GROUPS ==========================>>>>>>> ' + numGroups + '\n\n');

	for (var ind = 0; ind < groupObjList.length; ind++){
		groupObj = groupObjList[ind];
		gs.info(groupObj.Name + '\t <==> ' + groupObj.Org);	
	}]]></script>
        <sys_class_name>sysauto_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2021-05-31 09:58:22</sys_created_on>
        <sys_id>97fefec42f203010395aff1df699b6ed</sys_id>
        <sys_mod_count>14</sys_mod_count>
        <sys_name>Set Group Org Ownership v0.3</sys_name>
        <sys_package display_value="NeedIt" source="x_58872_needit">6ead8e780f603200cd674f8ce1050ed1</sys_package>
        <sys_policy/>
        <sys_scope display_value="NeedIt">6ead8e780f603200cd674f8ce1050ed1</sys_scope>
        <sys_update_name>sysauto_script_97fefec42f203010395aff1df699b6ed</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2021-05-31 16:41:18</sys_updated_on>
        <time_zone/>
        <upgrade_safe>false</upgrade_safe>
    </sysauto_script>
</record_update>
